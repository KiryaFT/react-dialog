{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\react-dialog-example\\\\src\\\\components\\\\Dialog\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Item from './Item';\nimport Title from './Title';\nimport { normalizeDialog } from './helpers';\nimport reducer from './reducer';\nimport data from '../../data';\nimport './styles.css';\n\nconst Dialog = ({\n  newMessage\n}) => {\n  _s();\n\n  const dialogRef = useRef();\n  const [state, dispatch] = useReducer(reducer, {\n    messages: data\n  });\n  useEffect(() => {\n    if (newMessage) {\n      dispatch({\n        type: 'add-message',\n        payload: newMessage\n      });\n      setTimeout(() => {\n        dispatch({\n          type: 'update-status',\n          payload: {\n            id: newMessage.id,\n            status: 'readed'\n          }\n        });\n      }, 1000);\n    }\n  }, [newMessage]);\n  useEffect(() => {\n    dialogRef.current.scrollTop = dialogRef.current.scrollHeight;\n  }, [state.messages.length]);\n\n  const onRemove = id => {\n    dispatch({\n      type: 'remove-message',\n      payload: id\n    });\n  };\n\n  const normalizedDialog = normalizeDialog(state.messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dialog\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow\",\n      ref: dialogRef,\n      children: normalizedDialog.map(item => item.type === 'message' ? /*#__PURE__*/_createElement(Item, { ...item,\n        key: item.id,\n        onPemove: onRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/_jsxDEV(Title, {\n        date: item.date\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dialog, \"RtfAgSFG5Lp2G5RS3tqOXtKJffM=\");\n\n_c = Dialog;\nDialog.propTypes = {\n  newMessage: PropTypes.shape({\n    id: PropTypes.number\n  })\n};\nexport default Dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"sources":["C:/Users/Пользователь/react-dialog-example/src/components/Dialog/index.js"],"names":["React","useReducer","useEffect","useRef","PropTypes","Item","Title","normalizeDialog","reducer","data","Dialog","newMessage","dialogRef","state","dispatch","messages","type","payload","setTimeout","id","status","current","scrollTop","scrollHeight","length","onRemove","normalizedDialog","map","item","date","propTypes","shape","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAC/B,QAAMC,SAAS,GAAGT,MAAM,EAAxB;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACO,OAAD,EAAU;AAC1CO,IAAAA,QAAQ,EAAEN;AADgC,GAAV,CAApC;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,UAAJ,EAAgB;AACZG,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAEN;AAFJ,OAAD,CAAR;AAKAO,MAAAA,UAAU,CAAC,MAAM;AACbJ,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAE,eADD;AAELC,UAAAA,OAAO,EAAE;AACLE,YAAAA,EAAE,EAAER,UAAU,CAACQ,EADV;AAELC,YAAAA,MAAM,EAAE;AAFH;AAFJ,SAAD,CAAR;AAOH,OARS,EAQP,IARO,CAAV;AASH;AACJ,GAjBQ,EAiBN,CAACT,UAAD,CAjBM,CAAT;AAmBAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS,CAACS,OAAV,CAAkBC,SAAlB,GAA8BV,SAAS,CAACS,OAAV,CAAkBE,YAAhD;AACH,GAFQ,EAEN,CAACV,KAAK,CAACE,QAAN,CAAeS,MAAhB,CAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAIN,EAAD,IAAQ;AACrBL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAE,gBADD;AAELC,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMO,gBAAgB,GAAGnB,eAAe,CAACM,KAAK,CAACE,QAAP,CAAxC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEH,SAA/B;AAAA,gBACKc,gBAAgB,CAACC,GAAjB,CAAsBC,IAAD,IAClBA,IAAI,CAACZ,IAAL,KAAc,SAAd,gBACI,eAAC,IAAD,OAAUY,IAAV;AAAgB,QAAA,GAAG,EAAEA,IAAI,CAACT,EAA1B;AAA8B,QAAA,QAAQ,EAAEM,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,gBAGI,QAAC,KAAD;AAAqB,QAAA,IAAI,EAAEG,IAAI,CAACC;AAAhC,SAAYD,IAAI,CAACT,EAAjB;AAAA;AAAA;AAAA;AAAA,cAJP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAnDD;;GAAMT,M;;KAAAA,M;AAqDNA,MAAM,CAACoB,SAAP,GAAmB;AACfnB,EAAAA,UAAU,EAAEP,SAAS,CAAC2B,KAAV,CAAgB;AACxBZ,IAAAA,EAAE,EAAEf,SAAS,CAAC4B;AADU,GAAhB;AADG,CAAnB;AAMA,eAAetB,MAAf","sourcesContent":["import React, { useReducer, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Item from './Item'\r\nimport Title from './Title'\r\n\r\nimport { normalizeDialog } from './helpers'\r\nimport reducer from './reducer'\r\nimport data from '../../data'\r\n\r\nimport './styles.css'\r\n\r\nconst Dialog = ({ newMessage }) => {\r\n    const dialogRef = useRef()\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        messages: data\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (newMessage) {\r\n            dispatch({\r\n                type: 'add-message',\r\n                payload: newMessage\r\n            })\r\n\r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: 'update-status',\r\n                    payload: {\r\n                        id: newMessage.id,\r\n                        status: 'readed'\r\n                    }\r\n                })\r\n            }, 1000)\r\n        }\r\n    }, [newMessage])\r\n\r\n    useEffect(() => {\r\n        dialogRef.current.scrollTop = dialogRef.current.scrollHeight\r\n    }, [state.messages.length])\r\n\r\n    const onRemove = (id) => {\r\n        dispatch({\r\n            type: 'remove-message',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    const normalizedDialog = normalizeDialog(state.messages)\r\n\r\n    return (\r\n        <div className='dialog'>\r\n            <div className='overflow' ref={dialogRef}>\r\n                {normalizedDialog.map((item) =>\r\n                    item.type === 'message' ? (\r\n                        <Item {...item} key={item.id} onPemove={onRemove} />\r\n                    ) : (\r\n                        <Title key={item.id} date={item.date} />\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDialog.propTypes = {\r\n    newMessage: PropTypes.shape({\r\n        id: PropTypes.number\r\n    })\r\n}\r\n\r\nexport default Dialog"]},"metadata":{},"sourceType":"module"}