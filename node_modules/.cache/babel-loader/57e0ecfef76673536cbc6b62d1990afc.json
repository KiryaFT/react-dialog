{"ast":null,"code":"import _objectSpread from\"C:/Users/\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C/react-dialog-example/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export default function reducer(state,action){switch(action.type){case'remove-message':return _objectSpread(_objectSpread({},state),{},{messages:state.messages.filter(function(message){return message.id!==action.payload;})});case'add-message':return _objectSpread(_objectSpread({},state),{},{messages:state.messages.concat(action.payload)});case'update-status':return _objectSpread(_objectSpread({},state),{},{messages:state.messages.map(function(message){if(message.id===action.payload.id){return _objectSpread(_objectSpread({},message),{},{status:action.payload.status});}return message;})});default:throw new Error('Unknown action type');}}","map":{"version":3,"sources":["C:/Users/Пользователь/react-dialog-example/src/components/Dialog/reducer.js"],"names":["reducer","state","action","type","messages","filter","message","id","payload","concat","map","status","Error"],"mappings":"wLAAA,cAAe,SAASA,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgC,CAC3C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,gBAAL,CACI,sCACOF,KADP,MAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeC,MAAf,CACN,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,EAAR,GAAeL,MAAM,CAACM,OAAnC,EADM,CAFd,GAOJ,IAAK,aAAL,CACI,sCACOP,KADP,MAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsBP,MAAM,CAACM,OAA7B,CAFd,GAKJ,IAAK,eAAL,CACI,sCACOP,KADP,MAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAmB,SAACJ,OAAD,CAAa,CACtC,GAAIA,OAAO,CAACC,EAAR,GAAeL,MAAM,CAACM,OAAP,CAAeD,EAAlC,CAAsC,CAClC,sCACOD,OADP,MAEIK,MAAM,CAAET,MAAM,CAACM,OAAP,CAAeG,MAF3B,GAIH,CAED,MAAOL,CAAAA,OAAP,CACH,CATS,CAFd,GAcJ,QACI,KAAM,IAAIM,CAAAA,KAAJ,CAAU,qBAAV,CAAN,CA/BR,CAiCH","sourcesContent":["export default function reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'remove-message':\r\n            return {\r\n                ...state,\r\n                messages: state.messages.filter(\r\n                    (message) => message.id !== action.payload\r\n                )\r\n            }\r\n\r\n        case 'add-message':\r\n            return {\r\n                ...state,\r\n                messages: state.messages.concat(action.payload)\r\n            }\r\n\r\n        case 'update-status':\r\n            return {\r\n                ...state,\r\n                messages: state.messages.map((message) => {\r\n                    if (message.id === action.payload.id) {\r\n                        return {\r\n                            ...message,\r\n                            status: action.payload.status\r\n                        }\r\n                    }\r\n\r\n                    return message\r\n                })\r\n            }\r\n\r\n        default:\r\n            throw new Error('Unknown action type')\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}